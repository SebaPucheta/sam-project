name: CI Pipeline

on:
  push:
    branches:
      - integration*

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      # Allow you to have access to the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Install node
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Save the node_modules files
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

  unit_test:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Restore the node_modules files
      - name: Restore node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    environment: development
    needs: unit_test
    if: startsWith(github.ref, 'refs/heads/integration')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      # Allow me to set my AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Restore node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Build project
        run: npm run build

      - name: Build with SAM
        run: sam build

      - name: Deploy with SAM
        run: sam deploy --template-file ./template.yaml --stack-name sam-project --capabilities CAPABILITY_IAM --no-confirm-changeset --no-fail-on-empty-changeset